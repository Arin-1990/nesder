package com.nesder.dao.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AccountExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	public AccountExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andUidIsNull() {
			addCriterion("uid is null");
			return (Criteria) this;
		}

		public Criteria andUidIsNotNull() {
			addCriterion("uid is not null");
			return (Criteria) this;
		}

		public Criteria andUidEqualTo(Integer value) {
			addCriterion("uid =", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotEqualTo(Integer value) {
			addCriterion("uid <>", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThan(Integer value) {
			addCriterion("uid >", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThanOrEqualTo(Integer value) {
			addCriterion("uid >=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThan(Integer value) {
			addCriterion("uid <", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThanOrEqualTo(Integer value) {
			addCriterion("uid <=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidIn(List<Integer> values) {
			addCriterion("uid in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotIn(List<Integer> values) {
			addCriterion("uid not in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidBetween(Integer value1, Integer value2) {
			addCriterion("uid between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotBetween(Integer value1, Integer value2) {
			addCriterion("uid not between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andAccounttypeIsNull() {
			addCriterion("accounttype is null");
			return (Criteria) this;
		}

		public Criteria andAccounttypeIsNotNull() {
			addCriterion("accounttype is not null");
			return (Criteria) this;
		}

		public Criteria andAccounttypeEqualTo(Integer value) {
			addCriterion("accounttype =", value, "accounttype");
			return (Criteria) this;
		}

		public Criteria andAccounttypeNotEqualTo(Integer value) {
			addCriterion("accounttype <>", value, "accounttype");
			return (Criteria) this;
		}

		public Criteria andAccounttypeGreaterThan(Integer value) {
			addCriterion("accounttype >", value, "accounttype");
			return (Criteria) this;
		}

		public Criteria andAccounttypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("accounttype >=", value, "accounttype");
			return (Criteria) this;
		}

		public Criteria andAccounttypeLessThan(Integer value) {
			addCriterion("accounttype <", value, "accounttype");
			return (Criteria) this;
		}

		public Criteria andAccounttypeLessThanOrEqualTo(Integer value) {
			addCriterion("accounttype <=", value, "accounttype");
			return (Criteria) this;
		}

		public Criteria andAccounttypeIn(List<Integer> values) {
			addCriterion("accounttype in", values, "accounttype");
			return (Criteria) this;
		}

		public Criteria andAccounttypeNotIn(List<Integer> values) {
			addCriterion("accounttype not in", values, "accounttype");
			return (Criteria) this;
		}

		public Criteria andAccounttypeBetween(Integer value1, Integer value2) {
			addCriterion("accounttype between", value1, value2, "accounttype");
			return (Criteria) this;
		}

		public Criteria andAccounttypeNotBetween(Integer value1, Integer value2) {
			addCriterion("accounttype not between", value1, value2, "accounttype");
			return (Criteria) this;
		}

		public Criteria andUpasswordIsNull() {
			addCriterion("upassword is null");
			return (Criteria) this;
		}

		public Criteria andUpasswordIsNotNull() {
			addCriterion("upassword is not null");
			return (Criteria) this;
		}

		public Criteria andUpasswordEqualTo(String value) {
			addCriterion("upassword =", value, "upassword");
			return (Criteria) this;
		}

		public Criteria andUpasswordNotEqualTo(String value) {
			addCriterion("upassword <>", value, "upassword");
			return (Criteria) this;
		}

		public Criteria andUpasswordGreaterThan(String value) {
			addCriterion("upassword >", value, "upassword");
			return (Criteria) this;
		}

		public Criteria andUpasswordGreaterThanOrEqualTo(String value) {
			addCriterion("upassword >=", value, "upassword");
			return (Criteria) this;
		}

		public Criteria andUpasswordLessThan(String value) {
			addCriterion("upassword <", value, "upassword");
			return (Criteria) this;
		}

		public Criteria andUpasswordLessThanOrEqualTo(String value) {
			addCriterion("upassword <=", value, "upassword");
			return (Criteria) this;
		}

		public Criteria andUpasswordLike(String value) {
			addCriterion("upassword like", value, "upassword");
			return (Criteria) this;
		}

		public Criteria andUpasswordNotLike(String value) {
			addCriterion("upassword not like", value, "upassword");
			return (Criteria) this;
		}

		public Criteria andUpasswordIn(List<String> values) {
			addCriterion("upassword in", values, "upassword");
			return (Criteria) this;
		}

		public Criteria andUpasswordNotIn(List<String> values) {
			addCriterion("upassword not in", values, "upassword");
			return (Criteria) this;
		}

		public Criteria andUpasswordBetween(String value1, String value2) {
			addCriterion("upassword between", value1, value2, "upassword");
			return (Criteria) this;
		}

		public Criteria andUpasswordNotBetween(String value1, String value2) {
			addCriterion("upassword not between", value1, value2, "upassword");
			return (Criteria) this;
		}

		public Criteria andUnameIsNull() {
			addCriterion("uname is null");
			return (Criteria) this;
		}

		public Criteria andUnameIsNotNull() {
			addCriterion("uname is not null");
			return (Criteria) this;
		}

		public Criteria andUnameEqualTo(String value) {
			addCriterion("uname =", value, "uname");
			return (Criteria) this;
		}

		public Criteria andUnameNotEqualTo(String value) {
			addCriterion("uname <>", value, "uname");
			return (Criteria) this;
		}

		public Criteria andUnameGreaterThan(String value) {
			addCriterion("uname >", value, "uname");
			return (Criteria) this;
		}

		public Criteria andUnameGreaterThanOrEqualTo(String value) {
			addCriterion("uname >=", value, "uname");
			return (Criteria) this;
		}

		public Criteria andUnameLessThan(String value) {
			addCriterion("uname <", value, "uname");
			return (Criteria) this;
		}

		public Criteria andUnameLessThanOrEqualTo(String value) {
			addCriterion("uname <=", value, "uname");
			return (Criteria) this;
		}

		public Criteria andUnameLike(String value) {
			addCriterion("uname like", value, "uname");
			return (Criteria) this;
		}

		public Criteria andUnameNotLike(String value) {
			addCriterion("uname not like", value, "uname");
			return (Criteria) this;
		}

		public Criteria andUnameIn(List<String> values) {
			addCriterion("uname in", values, "uname");
			return (Criteria) this;
		}

		public Criteria andUnameNotIn(List<String> values) {
			addCriterion("uname not in", values, "uname");
			return (Criteria) this;
		}

		public Criteria andUnameBetween(String value1, String value2) {
			addCriterion("uname between", value1, value2, "uname");
			return (Criteria) this;
		}

		public Criteria andUnameNotBetween(String value1, String value2) {
			addCriterion("uname not between", value1, value2, "uname");
			return (Criteria) this;
		}

		public Criteria andChannelnoIsNull() {
			addCriterion("channelno is null");
			return (Criteria) this;
		}

		public Criteria andChannelnoIsNotNull() {
			addCriterion("channelno is not null");
			return (Criteria) this;
		}

		public Criteria andChannelnoEqualTo(Integer value) {
			addCriterion("channelno =", value, "channelno");
			return (Criteria) this;
		}

		public Criteria andChannelnoNotEqualTo(Integer value) {
			addCriterion("channelno <>", value, "channelno");
			return (Criteria) this;
		}

		public Criteria andChannelnoGreaterThan(Integer value) {
			addCriterion("channelno >", value, "channelno");
			return (Criteria) this;
		}

		public Criteria andChannelnoGreaterThanOrEqualTo(Integer value) {
			addCriterion("channelno >=", value, "channelno");
			return (Criteria) this;
		}

		public Criteria andChannelnoLessThan(Integer value) {
			addCriterion("channelno <", value, "channelno");
			return (Criteria) this;
		}

		public Criteria andChannelnoLessThanOrEqualTo(Integer value) {
			addCriterion("channelno <=", value, "channelno");
			return (Criteria) this;
		}

		public Criteria andChannelnoIn(List<Integer> values) {
			addCriterion("channelno in", values, "channelno");
			return (Criteria) this;
		}

		public Criteria andChannelnoNotIn(List<Integer> values) {
			addCriterion("channelno not in", values, "channelno");
			return (Criteria) this;
		}

		public Criteria andChannelnoBetween(Integer value1, Integer value2) {
			addCriterion("channelno between", value1, value2, "channelno");
			return (Criteria) this;
		}

		public Criteria andChannelnoNotBetween(Integer value1, Integer value2) {
			addCriterion("channelno not between", value1, value2, "channelno");
			return (Criteria) this;
		}

		public Criteria andGenderIsNull() {
			addCriterion("gender is null");
			return (Criteria) this;
		}

		public Criteria andGenderIsNotNull() {
			addCriterion("gender is not null");
			return (Criteria) this;
		}

		public Criteria andGenderEqualTo(String value) {
			addCriterion("gender =", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderNotEqualTo(String value) {
			addCriterion("gender <>", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderGreaterThan(String value) {
			addCriterion("gender >", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderGreaterThanOrEqualTo(String value) {
			addCriterion("gender >=", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderLessThan(String value) {
			addCriterion("gender <", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderLessThanOrEqualTo(String value) {
			addCriterion("gender <=", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderLike(String value) {
			addCriterion("gender like", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderNotLike(String value) {
			addCriterion("gender not like", value, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderIn(List<String> values) {
			addCriterion("gender in", values, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderNotIn(List<String> values) {
			addCriterion("gender not in", values, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderBetween(String value1, String value2) {
			addCriterion("gender between", value1, value2, "gender");
			return (Criteria) this;
		}

		public Criteria andGenderNotBetween(String value1, String value2) {
			addCriterion("gender not between", value1, value2, "gender");
			return (Criteria) this;
		}

		public Criteria andCreatedateIsNull() {
			addCriterion("createdate is null");
			return (Criteria) this;
		}

		public Criteria andCreatedateIsNotNull() {
			addCriterion("createdate is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedateEqualTo(Date value) {
			addCriterionForJDBCDate("createdate =", value, "createdate");
			return (Criteria) this;
		}

		public Criteria andCreatedateNotEqualTo(Date value) {
			addCriterionForJDBCDate("createdate <>", value, "createdate");
			return (Criteria) this;
		}

		public Criteria andCreatedateGreaterThan(Date value) {
			addCriterionForJDBCDate("createdate >", value, "createdate");
			return (Criteria) this;
		}

		public Criteria andCreatedateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("createdate >=", value, "createdate");
			return (Criteria) this;
		}

		public Criteria andCreatedateLessThan(Date value) {
			addCriterionForJDBCDate("createdate <", value, "createdate");
			return (Criteria) this;
		}

		public Criteria andCreatedateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("createdate <=", value, "createdate");
			return (Criteria) this;
		}

		public Criteria andCreatedateIn(List<Date> values) {
			addCriterionForJDBCDate("createdate in", values, "createdate");
			return (Criteria) this;
		}

		public Criteria andCreatedateNotIn(List<Date> values) {
			addCriterionForJDBCDate("createdate not in", values, "createdate");
			return (Criteria) this;
		}

		public Criteria andCreatedateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("createdate between", value1, value2, "createdate");
			return (Criteria) this;
		}

		public Criteria andCreatedateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("createdate not between", value1, value2, "createdate");
			return (Criteria) this;
		}

		public Criteria andAgeIsNull() {
			addCriterion("age is null");
			return (Criteria) this;
		}

		public Criteria andAgeIsNotNull() {
			addCriterion("age is not null");
			return (Criteria) this;
		}

		public Criteria andAgeEqualTo(Integer value) {
			addCriterion("age =", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeNotEqualTo(Integer value) {
			addCriterion("age <>", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeGreaterThan(Integer value) {
			addCriterion("age >", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeGreaterThanOrEqualTo(Integer value) {
			addCriterion("age >=", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeLessThan(Integer value) {
			addCriterion("age <", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeLessThanOrEqualTo(Integer value) {
			addCriterion("age <=", value, "age");
			return (Criteria) this;
		}

		public Criteria andAgeIn(List<Integer> values) {
			addCriterion("age in", values, "age");
			return (Criteria) this;
		}

		public Criteria andAgeNotIn(List<Integer> values) {
			addCriterion("age not in", values, "age");
			return (Criteria) this;
		}

		public Criteria andAgeBetween(Integer value1, Integer value2) {
			addCriterion("age between", value1, value2, "age");
			return (Criteria) this;
		}

		public Criteria andAgeNotBetween(Integer value1, Integer value2) {
			addCriterion("age not between", value1, value2, "age");
			return (Criteria) this;
		}

		public Criteria andIntroductionIsNull() {
			addCriterion("introduction is null");
			return (Criteria) this;
		}

		public Criteria andIntroductionIsNotNull() {
			addCriterion("introduction is not null");
			return (Criteria) this;
		}

		public Criteria andIntroductionEqualTo(String value) {
			addCriterion("introduction =", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionNotEqualTo(String value) {
			addCriterion("introduction <>", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionGreaterThan(String value) {
			addCriterion("introduction >", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionGreaterThanOrEqualTo(String value) {
			addCriterion("introduction >=", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionLessThan(String value) {
			addCriterion("introduction <", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionLessThanOrEqualTo(String value) {
			addCriterion("introduction <=", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionLike(String value) {
			addCriterion("introduction like", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionNotLike(String value) {
			addCriterion("introduction not like", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionIn(List<String> values) {
			addCriterion("introduction in", values, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionNotIn(List<String> values) {
			addCriterion("introduction not in", values, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionBetween(String value1, String value2) {
			addCriterion("introduction between", value1, value2, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionNotBetween(String value1, String value2) {
			addCriterion("introduction not between", value1, value2, "introduction");
			return (Criteria) this;
		}

		public Criteria andAvatorurlIsNull() {
			addCriterion("avatorurl is null");
			return (Criteria) this;
		}

		public Criteria andAvatorurlIsNotNull() {
			addCriterion("avatorurl is not null");
			return (Criteria) this;
		}

		public Criteria andAvatorurlEqualTo(String value) {
			addCriterion("avatorurl =", value, "avatorurl");
			return (Criteria) this;
		}

		public Criteria andAvatorurlNotEqualTo(String value) {
			addCriterion("avatorurl <>", value, "avatorurl");
			return (Criteria) this;
		}

		public Criteria andAvatorurlGreaterThan(String value) {
			addCriterion("avatorurl >", value, "avatorurl");
			return (Criteria) this;
		}

		public Criteria andAvatorurlGreaterThanOrEqualTo(String value) {
			addCriterion("avatorurl >=", value, "avatorurl");
			return (Criteria) this;
		}

		public Criteria andAvatorurlLessThan(String value) {
			addCriterion("avatorurl <", value, "avatorurl");
			return (Criteria) this;
		}

		public Criteria andAvatorurlLessThanOrEqualTo(String value) {
			addCriterion("avatorurl <=", value, "avatorurl");
			return (Criteria) this;
		}

		public Criteria andAvatorurlLike(String value) {
			addCriterion("avatorurl like", value, "avatorurl");
			return (Criteria) this;
		}

		public Criteria andAvatorurlNotLike(String value) {
			addCriterion("avatorurl not like", value, "avatorurl");
			return (Criteria) this;
		}

		public Criteria andAvatorurlIn(List<String> values) {
			addCriterion("avatorurl in", values, "avatorurl");
			return (Criteria) this;
		}

		public Criteria andAvatorurlNotIn(List<String> values) {
			addCriterion("avatorurl not in", values, "avatorurl");
			return (Criteria) this;
		}

		public Criteria andAvatorurlBetween(String value1, String value2) {
			addCriterion("avatorurl between", value1, value2, "avatorurl");
			return (Criteria) this;
		}

		public Criteria andAvatorurlNotBetween(String value1, String value2) {
			addCriterion("avatorurl not between", value1, value2, "avatorurl");
			return (Criteria) this;
		}

		public Criteria andGidIsNull() {
			addCriterion("gid is null");
			return (Criteria) this;
		}

		public Criteria andGidIsNotNull() {
			addCriterion("gid is not null");
			return (Criteria) this;
		}

		public Criteria andGidEqualTo(Integer value) {
			addCriterion("gid =", value, "gid");
			return (Criteria) this;
		}

		public Criteria andGidNotEqualTo(Integer value) {
			addCriterion("gid <>", value, "gid");
			return (Criteria) this;
		}

		public Criteria andGidGreaterThan(Integer value) {
			addCriterion("gid >", value, "gid");
			return (Criteria) this;
		}

		public Criteria andGidGreaterThanOrEqualTo(Integer value) {
			addCriterion("gid >=", value, "gid");
			return (Criteria) this;
		}

		public Criteria andGidLessThan(Integer value) {
			addCriterion("gid <", value, "gid");
			return (Criteria) this;
		}

		public Criteria andGidLessThanOrEqualTo(Integer value) {
			addCriterion("gid <=", value, "gid");
			return (Criteria) this;
		}

		public Criteria andGidIn(List<Integer> values) {
			addCriterion("gid in", values, "gid");
			return (Criteria) this;
		}

		public Criteria andGidNotIn(List<Integer> values) {
			addCriterion("gid not in", values, "gid");
			return (Criteria) this;
		}

		public Criteria andGidBetween(Integer value1, Integer value2) {
			addCriterion("gid between", value1, value2, "gid");
			return (Criteria) this;
		}

		public Criteria andGidNotBetween(Integer value1, Integer value2) {
			addCriterion("gid not between", value1, value2, "gid");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.account
	 * @mbg.generated  Thu Oct 17 16:49:24 JST 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.account
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}