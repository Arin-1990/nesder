package com.nesder.dao.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ModuleExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.module
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.module
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table public.module
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.module
	 * @mbg.generated
	 */
	public ModuleExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.module
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.module
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.module
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.module
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.module
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.module
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.module
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.module
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.module
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table public.module
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.module
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andModule_idIsNull() {
			addCriterion("module_id is null");
			return (Criteria) this;
		}

		public Criteria andModule_idIsNotNull() {
			addCriterion("module_id is not null");
			return (Criteria) this;
		}

		public Criteria andModule_idEqualTo(Integer value) {
			addCriterion("module_id =", value, "module_id");
			return (Criteria) this;
		}

		public Criteria andModule_idNotEqualTo(Integer value) {
			addCriterion("module_id <>", value, "module_id");
			return (Criteria) this;
		}

		public Criteria andModule_idGreaterThan(Integer value) {
			addCriterion("module_id >", value, "module_id");
			return (Criteria) this;
		}

		public Criteria andModule_idGreaterThanOrEqualTo(Integer value) {
			addCriterion("module_id >=", value, "module_id");
			return (Criteria) this;
		}

		public Criteria andModule_idLessThan(Integer value) {
			addCriterion("module_id <", value, "module_id");
			return (Criteria) this;
		}

		public Criteria andModule_idLessThanOrEqualTo(Integer value) {
			addCriterion("module_id <=", value, "module_id");
			return (Criteria) this;
		}

		public Criteria andModule_idIn(List<Integer> values) {
			addCriterion("module_id in", values, "module_id");
			return (Criteria) this;
		}

		public Criteria andModule_idNotIn(List<Integer> values) {
			addCriterion("module_id not in", values, "module_id");
			return (Criteria) this;
		}

		public Criteria andModule_idBetween(Integer value1, Integer value2) {
			addCriterion("module_id between", value1, value2, "module_id");
			return (Criteria) this;
		}

		public Criteria andModule_idNotBetween(Integer value1, Integer value2) {
			addCriterion("module_id not between", value1, value2, "module_id");
			return (Criteria) this;
		}

		public Criteria andMnameIsNull() {
			addCriterion("mname is null");
			return (Criteria) this;
		}

		public Criteria andMnameIsNotNull() {
			addCriterion("mname is not null");
			return (Criteria) this;
		}

		public Criteria andMnameEqualTo(String value) {
			addCriterion("mname =", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameNotEqualTo(String value) {
			addCriterion("mname <>", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameGreaterThan(String value) {
			addCriterion("mname >", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameGreaterThanOrEqualTo(String value) {
			addCriterion("mname >=", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameLessThan(String value) {
			addCriterion("mname <", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameLessThanOrEqualTo(String value) {
			addCriterion("mname <=", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameLike(String value) {
			addCriterion("mname like", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameNotLike(String value) {
			addCriterion("mname not like", value, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameIn(List<String> values) {
			addCriterion("mname in", values, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameNotIn(List<String> values) {
			addCriterion("mname not in", values, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameBetween(String value1, String value2) {
			addCriterion("mname between", value1, value2, "mname");
			return (Criteria) this;
		}

		public Criteria andMnameNotBetween(String value1, String value2) {
			addCriterion("mname not between", value1, value2, "mname");
			return (Criteria) this;
		}

		public Criteria andCreate_dateIsNull() {
			addCriterion("create_date is null");
			return (Criteria) this;
		}

		public Criteria andCreate_dateIsNotNull() {
			addCriterion("create_date is not null");
			return (Criteria) this;
		}

		public Criteria andCreate_dateEqualTo(Date value) {
			addCriterionForJDBCDate("create_date =", value, "create_date");
			return (Criteria) this;
		}

		public Criteria andCreate_dateNotEqualTo(Date value) {
			addCriterionForJDBCDate("create_date <>", value, "create_date");
			return (Criteria) this;
		}

		public Criteria andCreate_dateGreaterThan(Date value) {
			addCriterionForJDBCDate("create_date >", value, "create_date");
			return (Criteria) this;
		}

		public Criteria andCreate_dateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("create_date >=", value, "create_date");
			return (Criteria) this;
		}

		public Criteria andCreate_dateLessThan(Date value) {
			addCriterionForJDBCDate("create_date <", value, "create_date");
			return (Criteria) this;
		}

		public Criteria andCreate_dateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("create_date <=", value, "create_date");
			return (Criteria) this;
		}

		public Criteria andCreate_dateIn(List<Date> values) {
			addCriterionForJDBCDate("create_date in", values, "create_date");
			return (Criteria) this;
		}

		public Criteria andCreate_dateNotIn(List<Date> values) {
			addCriterionForJDBCDate("create_date not in", values, "create_date");
			return (Criteria) this;
		}

		public Criteria andCreate_dateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("create_date between", value1, value2, "create_date");
			return (Criteria) this;
		}

		public Criteria andCreate_dateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("create_date not between", value1, value2, "create_date");
			return (Criteria) this;
		}

		public Criteria andIntroductionIsNull() {
			addCriterion("introduction is null");
			return (Criteria) this;
		}

		public Criteria andIntroductionIsNotNull() {
			addCriterion("introduction is not null");
			return (Criteria) this;
		}

		public Criteria andIntroductionEqualTo(String value) {
			addCriterion("introduction =", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionNotEqualTo(String value) {
			addCriterion("introduction <>", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionGreaterThan(String value) {
			addCriterion("introduction >", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionGreaterThanOrEqualTo(String value) {
			addCriterion("introduction >=", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionLessThan(String value) {
			addCriterion("introduction <", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionLessThanOrEqualTo(String value) {
			addCriterion("introduction <=", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionLike(String value) {
			addCriterion("introduction like", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionNotLike(String value) {
			addCriterion("introduction not like", value, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionIn(List<String> values) {
			addCriterion("introduction in", values, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionNotIn(List<String> values) {
			addCriterion("introduction not in", values, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionBetween(String value1, String value2) {
			addCriterion("introduction between", value1, value2, "introduction");
			return (Criteria) this;
		}

		public Criteria andIntroductionNotBetween(String value1, String value2) {
			addCriterion("introduction not between", value1, value2, "introduction");
			return (Criteria) this;
		}

		public Criteria andCreated_accountIsNull() {
			addCriterion("created_account is null");
			return (Criteria) this;
		}

		public Criteria andCreated_accountIsNotNull() {
			addCriterion("created_account is not null");
			return (Criteria) this;
		}

		public Criteria andCreated_accountEqualTo(Integer value) {
			addCriterion("created_account =", value, "created_account");
			return (Criteria) this;
		}

		public Criteria andCreated_accountNotEqualTo(Integer value) {
			addCriterion("created_account <>", value, "created_account");
			return (Criteria) this;
		}

		public Criteria andCreated_accountGreaterThan(Integer value) {
			addCriterion("created_account >", value, "created_account");
			return (Criteria) this;
		}

		public Criteria andCreated_accountGreaterThanOrEqualTo(Integer value) {
			addCriterion("created_account >=", value, "created_account");
			return (Criteria) this;
		}

		public Criteria andCreated_accountLessThan(Integer value) {
			addCriterion("created_account <", value, "created_account");
			return (Criteria) this;
		}

		public Criteria andCreated_accountLessThanOrEqualTo(Integer value) {
			addCriterion("created_account <=", value, "created_account");
			return (Criteria) this;
		}

		public Criteria andCreated_accountIn(List<Integer> values) {
			addCriterion("created_account in", values, "created_account");
			return (Criteria) this;
		}

		public Criteria andCreated_accountNotIn(List<Integer> values) {
			addCriterion("created_account not in", values, "created_account");
			return (Criteria) this;
		}

		public Criteria andCreated_accountBetween(Integer value1, Integer value2) {
			addCriterion("created_account between", value1, value2, "created_account");
			return (Criteria) this;
		}

		public Criteria andCreated_accountNotBetween(Integer value1, Integer value2) {
			addCriterion("created_account not between", value1, value2, "created_account");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table public.module
	 * @mbg.generated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.module
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}